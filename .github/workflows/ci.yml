name: CI (Python)

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build-and-smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.12 + pip cache
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install project (wheel-friendly)
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install --no-build-isolation .

      - name: Import smoke (quick)
        run: |
          python - <<'PY'
          import quip_api_es, fastapi
          print("import ok")
          PY

      - name: Build Docker image
        env:
          DOCKER_BUILDKIT: '1'
        run: |
          docker build -t quip-api-es:ci .

      - name: Run container
        env:
          QUIP_API_SUBMIT_TOKEN: ci-token
        run: |
          docker run -d --name quip-api-es \
            -e QUIP_API_SUBMIT_TOKEN="${QUIP_API_SUBMIT_TOKEN}" \
            -e PENDING_STORAGE=/tmp/pending.json \
            -p 127.0.0.1:8080:8000 \
            quip-api-es:ci

      - name: Wait for health
        run: |
          for i in $(seq 1 120); do
            if curl -fsS http://127.0.0.1:8080/health >/dev/null; then
              echo "Service healthy"; exit 0
            fi
            sleep 0.5
          done
          echo "Timeout waiting for service" >&2
          exit 1

      - name: Smoke test
        env:
          QUIP_API_SUBMIT_TOKEN: ci-token
        run: |
          set -euo pipefail
          curl -fsS http://127.0.0.1:8080/health
          curl -fsS http://127.0.0.1:8080/categories
          curl -sS -X POST http://127.0.0.1:8080/submit \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${QUIP_API_SUBMIT_TOKEN}" \
            -d '{"texto":"Smoke test desde CI"}' \
          | python - <<'PY'
          import sys,json
          data=json.load(sys.stdin)
          print(data)
          assert data.get("status")=="pending", f"unexpected: {data}"
          PY

      - name: Dump logs (always)
        if: always()
        run: docker logs quip-api-es || true

      - name: Stop container (always)
        if: always()
        run: docker rm -f quip-api-es || true
